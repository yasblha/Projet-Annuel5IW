name: Selective Microservice Deploy

on:
  push:
    branches:
      - main
    paths:
      - 'services/**'
      - 'frontend/**'
      - 'k8s/**'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.filter.outputs.services }}
      frontend: ${{ steps.filter.outputs.frontend }}
      k8s: ${{ steps.filter.outputs.k8s }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for proper change detection
      
      - name: Filter changed files
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            auth-service:
              - 'services/auth-service/**'
            api-gateway:
              - 'services/api-gateway/**'
            contrat-service:
              - 'services/contrat-service/**'
            facture-service:
              - 'services/facture-service/**'
            intervention-service:
              - 'services/intervention-service/**'
            mailer-service:
              - 'services/mailer-service/**'
            operation-service:
              - 'services/operation-service/**'
            workflow-service:
              - 'services/workflow-service/**'
            frontend:
              - 'frontend/**'
            k8s:
              - 'k8s/**'
            services:
              - 'services/**'
      
      - name: Debug changed paths
        run: |
          echo "Changed services: ${{ steps.filter.outputs.services_files }}"
          echo "Frontend changed: ${{ steps.filter.outputs.frontend }}"
          echo "K8s changed: ${{ steps.filter.outputs.k8s }}"

  build-and-push:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.services == 'true' || needs.detect-changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        service: [
          {name: 'auth-service', path: 'services/auth-service', changed: '${{ contains(needs.detect-changes.outputs.services_files, ''services/auth-service/'') }}'},
          {name: 'api-gateway', path: 'services/api-gateway', changed: '${{ contains(needs.detect-changes.outputs.services_files, ''services/api-gateway/'') }}'},
          {name: 'contrat-service', path: 'services/contrat-service', changed: '${{ contains(needs.detect-changes.outputs.services_files, ''services/contrat-service/'') }}'},
          {name: 'facture-service', path: 'services/facture-service', changed: '${{ contains(needs.detect-changes.outputs.services_files, ''services/facture-service/'') }}'},
          {name: 'intervention-service', path: 'services/intervention-service', changed: '${{ contains(needs.detect-changes.outputs.services_files, ''services/intervention-service/'') }}'},
          {name: 'mailer-service', path: 'services/mailer-service', changed: '${{ contains(needs.detect-changes.outputs.services_files, ''services/mailer-service/'') }}'},
          {name: 'operation-service', path: 'services/operation-service', changed: '${{ contains(needs.detect-changes.outputs.services_files, ''services/operation-service/'') }}'},
          {name: 'workflow-service', path: 'services/workflow-service', changed: '${{ contains(needs.detect-changes.outputs.services_files, ''services/workflow-service/'') }}'},
          {name: 'frontend', path: 'frontend', changed: '${{ needs.detect-changes.outputs.frontend == ''true'' }}'}
        ]
    
    env:
      REGISTRY: registry.digitalocean.com/factu-reg
      IMAGE_TAG: ${{ github.sha }}
    
    steps:
      - name: Skip if service not changed
        if: ${{ matrix.service.changed != 'true' }}
        run: echo "Skipping ${{ matrix.service.name }} - no changes detected"
        continue-on-error: true
      
      - name: Checkout code
        if: ${{ matrix.service.changed == 'true' }}
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        if: ${{ matrix.service.changed == 'true' }}
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to DigitalOcean Container Registry
        if: ${{ matrix.service.changed == 'true' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push service image
        if: ${{ matrix.service.changed == 'true' }}
        run: |
          echo "Building ${{ matrix.service.name }}..."
          docker build --platform linux/amd64 \
            -t $REGISTRY/${{ matrix.service.name }}:$IMAGE_TAG \
            -t $REGISTRY/${{ matrix.service.name }}:latest \
            -f ${{ matrix.service.path }}/Dockerfile .
          
          echo "Pushing ${{ matrix.service.name }}..."
          docker push $REGISTRY/${{ matrix.service.name }}:$IMAGE_TAG
          docker push $REGISTRY/${{ matrix.service.name }}:latest
          
          echo "${{ matrix.service.name }} build and push completed successfully"

  deploy:
    needs: [detect-changes, build-and-push]
    if: ${{ always() && (needs.detect-changes.outputs.services == 'true' || needs.detect-changes.outputs.frontend == 'true' || needs.detect-changes.outputs.k8s == 'true') }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Kubeconfig
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      
      - name: Save kubeconfig
        run: doctl kubernetes cluster kubeconfig save factu
      
      - name: Apply k8s configurations
        if: ${{ needs.detect-changes.outputs.k8s == 'true' }}
        run: |
          echo "Applying all Kubernetes configurations"
          kubectl apply -f k8s/
      
      - name: Restart changed deployments only
        if: ${{ needs.detect-changes.outputs.services == 'true' || needs.detect-changes.outputs.frontend == 'true' }}
        run: |
          # Get the list of changed files
          CHANGED_FILES="${{ needs.detect-changes.outputs.services_files }}"
          
          # Check and restart each service if it was changed
          if [[ "$CHANGED_FILES" == *"services/auth-service/"* ]]; then
            echo "Restarting auth-service"
            kubectl rollout restart deployment/auth-service -n aquaerp
          fi
          
          if [[ "$CHANGED_FILES" == *"services/api-gateway/"* ]]; then
            echo "Restarting api-gateway"
            kubectl rollout restart deployment/api-gateway -n aquaerp
          fi
          
          if [[ "$CHANGED_FILES" == *"services/contrat-service/"* ]]; then
            echo "Restarting contrat-service"
            kubectl rollout restart deployment/contrat-service -n aquaerp
          fi
          
          if [[ "$CHANGED_FILES" == *"services/facture-service/"* ]]; then
            echo "Restarting facture-service"
            kubectl rollout restart deployment/facture-service -n aquaerp
          fi
          
          if [[ "$CHANGED_FILES" == *"services/intervention-service/"* ]]; then
            echo "Restarting intervention-service"
            kubectl rollout restart deployment/intervention-service -n aquaerp
          fi
          
          if [[ "$CHANGED_FILES" == *"services/mailer-service/"* ]]; then
            echo "Restarting mailer-service"
            kubectl rollout restart deployment/mailer-service -n aquaerp
          fi
          
          if [[ "$CHANGED_FILES" == *"services/operation-service/"* ]]; then
            echo "Restarting operation-service"
            kubectl rollout restart deployment/operation-service -n aquaerp
          fi
          
          if [[ "$CHANGED_FILES" == *"services/workflow-service/"* ]]; then
            echo "Restarting workflow-service"
            kubectl rollout restart deployment/workflow-service -n aquaerp
          fi
          
          if [[ "${{ needs.detect-changes.outputs.frontend }}" == "true" ]]; then
            echo "Restarting frontend"
            kubectl rollout restart deployment/frontend -n aquaerp
          fi
